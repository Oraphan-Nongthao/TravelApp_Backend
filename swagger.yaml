openapi: 3.0.0
info:
  title: Traval App API
  description: API for managing user profiles.
  version: 0.1.9

servers:
  - url: http://localhost:3000
    description: Localhost server on port 3000

paths:

  #----------------------------- signup ----------------------------- #

  /signup:
    get:
      tags: [signup]
      summary: Returns a list of signup.
      responses:
        "200":
          description: A JSON array of signup
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      format: int64
                    account_email:
                      type: string
                    account_name:
                      type: string
                    account_gender:
                      type: string
                    account_birthday:
                      type: string
                      format: date
                    account_picture:
                      type: string
                    account_telephone:
                      type: string
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
    post:
      summary: User registration
      tags: [signup]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - account_email
                - account_password
                - confirm_password
              properties:
                account_email:
                  type: string
                account_password:
                  type: string  
                confirm_password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input or email already registered
        '500':
          description: Internal server error

#----------------------------- signin ----------------------------- #

  /signin:
    get:
      tags: [signin]
      summary: Returns a list of signin.
      responses:
        "200":
          description: A JSON array of signin
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      format: int64
                    account_email:
                      type: string
                    account_name:
                      type: string
                    account_gender:
                      type: string
                    account_birthday:
                      type: string
                      format: date
                    account_picture:
                      type: string
                    account_telephone:
                      type: string
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time

    post:
      summary: User sign-in (authentication)
      tags: [signin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - account_email
                - account_password
              properties:
                account_email:
                  type: string
                account_password:
                  type: string
      responses:
        '200':
          description: User signed in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
        '400':
          description: Invalid credentials
        '500':
          description: Internal server error

#----------------------------- profile ----------------------------- #
  /profile:
    get:
      tags: [profile]
      summary: Returns a list of profiles.
      responses:
        "200":
          description: A JSON array of profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      format: int64
                    account_email:
                      type: string
                    account_name:
                      type: string
                    account_gender:
                      type: string
                    account_birthday:
                      type: string
                      format: date
                    account_picture:
                      type: string
                    account_telephone:
                      type: string
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time

    post:
      summary: Creates a new profile.
      tags: [profile]
      requestBody:
        required: true 
        content:
          application/json:
            schema:
              type: object
              required:
                - account_email
                - account_password
                - account_name
              properties:
                account_email:
                  type: string
                account_password:
                  type: string  
                account_name:
                  type: string
                account_gender:
                  type: string
                account_birthday:
                  type: string
                  format: date  
                account_picture:
                  type: string   
                account_telephone:
                  type: string
                latitude:
                  type: number
                  format: float                  
                longitude:
                  type: number
                  format: float     
      responses: 
        '201':
          description: User successfully created

  /profile/{id}:
    get:
      summary: Returns a profile by ID.
      tags: [profile]
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
            format: int64
            minimum: 1
      responses: 
        '200':
          description: Profile found
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_id:
                    type: integer
                    format: int64
                  account_email:
                    type: string
                  account_name:
                    type: string
                  account_gender:
                    type: string
                  account_birthday:
                    type: string
                    format: date
                  account_picture:
                    type: string
                  account_telephone:
                    type: string
                  latitude:
                    type: number
                    format: float
                  longitude:
                    type: number
                    format: float
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '404':
          description: Profile not found

    put:
      summary: Updates a profile.
      tags: [profile]
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true 
        content:
          application/json:
            schema:
              type: object
              properties:
                account_email:
                  type: string
                account_password:
                  type: string  
                account_name:
                  type: string
                account_gender:
                  type: string
                account_birthday:
                  type: string
                  format: date  
                account_picture:
                  type: string   
                account_telephone:
                  type: string
                latitude:
                  type: number
                  format: float                  
                longitude:
                  type: number
                  format: float     
      responses: 
        '200':
          description: Profile updated successfully
        '404':
          description: Profile not found
        '500':
          description: Internal server error


  /qa_picture:
    get:
      tags: [qa_picture]
      summary: Returns a list of qa_picture.
      responses:
        "200":
          description: A JSON array of qa_picture
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    picture_id:
                      format: int64
                    picture_url:
                      type: string

  /search_nearby:
    get:
      summary: ค้นหาสถานที่ใกล้เคียง
      description: ดึงข้อมูลสถานที่รอบๆ ตามพิกัดที่กำหนด
      parameters:
        - name: district 
          in: query
          required: true
          schema:
            type: string
          description:  เขตของสถานที่ที่ต้องการค้นหา
        - name: postcode
          in: query
          required: true
          schema:
            type: number
          description: รหัสไปรษณีย์ของสถานที่ที่ต้องการค้นหา
        - name: radius
          in: query
          required: true
          schema:
            type: integer
          description: ระยะทางค้นหา (เมตร)
      responses:
        "200":
          description: ข้อมูลสถานที่ที่พบ
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
                    lat:
                      type: number
                    lon:
                      type: number
        "400":
          description: ข้อมูลที่ส่งมาไม่ถูกต้อง
        "500":
          description: เซิร์ฟเวอร์มีปัญหา

  /calculate_distance:
    get:
      summary: คำนวณระยะทางระหว่างสองจุด
      description: ใช้ Longdo Map API คำนวณระยะทางจากจุดเริ่มต้นไปยังจุดปลายทาง
      parameters:
        - name: start_lat
          in: query
          required: true
          schema:
            type: number
          description: ละติจูดของจุดเริ่มต้น
        - name: start_lon
          in: query
          required: true
          schema:
            type: number
          description: ลองจิจูดของจุดเริ่มต้น
        - name: end_lat
          in: query
          required: true
          schema:
            type: number
          description: ละติจูดของจุดปลายทาง
        - name: end_lon
          in: query
          required: true
          schema:
            type: number
          description: ลองจิจูดของจุดปลายทาง
      responses:
        "200":
          description: ข้อมูลเส้นทางที่คำนวณได้
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  distance:
                    type: number
                    description: ระยะทางที่คำนวณได้ (เมตร)
                  duration:
                    type: number
                    description: เวลาที่ใช้ในการเดินทาง (วินาที)
                  route:
                    type: array
                    items:
                      type: object
                      properties:
                        lat:
                          type: number
                        lon:
                          type: number
        "400":
          description: ข้อมูลที่ส่งมาไม่ครบถ้วน
        "500":
          description: เซิร์ฟเวอร์มีปัญหา
